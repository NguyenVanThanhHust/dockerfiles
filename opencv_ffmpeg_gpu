FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04
# https://docs.nvidia.com/video-technologies/video-codec-sdk/ffmpeg-with-nvidia-gpu/

RUN rm /etc/apt/sources.list.d/cuda.list
RUN rm /etc/apt/sources.list.d/nvidia-ml.list
RUN apt-key del 7fa2af80

RUN cat /etc/lsb-release
RUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub

ARG DEBIAN_FRONTEND=noninteractive

# Install some basic utilities
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    sudo \
    git \
    bzip2 \
    libx11-6 \
    checkinstall \
    locales \
    lsb-release \
    mesa-utils \
    subversion \
    nano \
    terminator \
    xterm \
    wget \
    htop \
    libssl-dev \
    build-essential \
    dbus-x11 \
    software-properties-common \
    gdb valgrind \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /git_installed_libs/

RUN git clone --depth 1 https://gitlab.kitware.com/cmake/cmake.git
WORKDIR /git_installed_libs/cmake/
RUN ./bootstrap --parallel=8 && make -j8 && make install

WORKDIR /git_installed_libs/
RUN git clone https://github.com/opencv/opencv.git -b 4.5.2
RUN git clone https://github.com/opencv/opencv_contrib.git -b 4.5.2
RUN git clone https://github.com/FFmpeg/FFmpeg.git -b release/4.4 ffmpeg/
RUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git 

RUN apt-get update

# Install boost
WORKDIR /git_installed_libs/
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.bz2 && tar -xvf boost_1_78_0.tar.bz2
WORKDIR /git_installed_libs/boost_1_78_0/
RUN apt-get -y update && apt-get install -y build-essential g++ python-dev autotools-dev libicu-dev libbz2-dev
RUN ./bootstrap.sh --prefix=/usr/local/
RUN ./b2 -j8 variant=release link=shared threading=multi runtime-link=shared
RUN ./b2 -j8 install

WORKDIR /git_installed_libs/


# Install pkg config to find ffmpeg
RUN apt-get update -qq  && apt-get install -y autoconf \
    automake \
    build-essential \
    git-core \
    libass-dev \
    libfreetype6-dev \
    libgnutls28-dev \
    libmp3lame-dev \
    libsdl2-dev \
    libtool \
    libva-dev \
    libvdpau-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    meson \
    ninja-build \
    pkg-config \
    texinfo \
    wget \
    yasm \
    zlib1g-dev

# RUN apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev libavdevice-dev
RUN apt-get install -y libavdevice-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev libavdevice-dev

WORKDIR /git_installed_libs/nv-codec-headers/
RUN make install

RUN apt-get install -y build-essential yasm cmake libtool libc6 libc6-dev unzip wget libnuma1 libnuma-dev
WORKDIR /git_installed_libs/ffmpeg/
RUN ./configure --enable-nonfree --enable-cuda-nvcc --enable-libnpp --extra-cflags=-I/usr/local/cuda/include --extra-ldflags=-L/usr/local/cuda/lib64 --disable-static --enable-shared
RUN make -j2 && make install

WORKDIR /git_installed_libs/

ARG LIB_PREFIX='/usr/local'
ENV CXXFLAGS="-D__STDC_CONSTANT_MACROS"
ENV LIB_PREFIX=${LIB_PREFIX} \
    FFMPEG_PATH='/usr/bin/ffmpeg'

RUN echo $(ffmpeg -version)

RUN apt-get update && apt-get install -y libgtk-3-dev vim fish

RUN mkdir -p /git_installed_libs/opencv/build/
WORKDIR /git_installed_libs/opencv/build/

RUN cmake \
    -DBUILD_opencv_java=OFF \
    -DBUILD_opencv_python=OFF \
    -DBUILD_opencv_python2=OFF \
    -DBUILD_opencv_python3=OFF	 \
    -DOPENCV_ENABLE_NONFREE=ON \
    -DWITH_FFMPEG=ON \
    -DBUILD_DOCS=OFF \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_JAVA=OFF \
    -DBUILD_opencv_apps=OFF \
    -DBUILD_opencv_aruco=OFF \
    -DBUILD_opencv_bgsegm=OFF \
    -DBUILD_opencv_bioinspired=OFF \
    -DBUILD_opencv_ccalib=OFF \
    -DBUILD_opencv_datasets=OFF \
    -DBUILD_opencv_dnn_objdetect=OFF \
    -DBUILD_opencv_dpm=OFF \
    -DBUILD_opencv_fuzzy=OFF \
    -DBUILD_opencv_hfs=OFF \
    -DBUILD_opencv_java_bindings_generator=OFF \
    -DBUILD_opencv_js=OFF \
    -DBUILD_opencv_img_hash=OFF \
    -DBUILD_opencv_line_descriptor=OFF \
    -DBUILD_opencv_optflow=OFF \
    -DBUILD_opencv_phase_unwrapping=OFF \
    -DBUILD_opencv_python3=OFF \
    -DBUILD_opencv_python_bindings_generator=OFF \
    -DBUILD_opencv_reg=OFF \
    -DBUILD_opencv_rgbd=OFF \
    -DBUILD_opencv_saliency=OFF \
    -DBUILD_opencv_shape=OFF \
    -DBUILD_opencv_stereo=OFF \
    -DBUILD_opencv_stitching=OFF \
    -DBUILD_opencv_structured_light=OFF \
    -DBUILD_opencv_superres=OFF \
    -DBUILD_opencv_surface_matching=OFF \
    -DBUILD_opencv_ts=OFF \
    -DBUILD_opencv_cudacodec=ON \
    -DBUILD_opencv_xobjdetect=OFF \
    -DBUILD_opencv_xphoto=OFF \
    -DWITH_VTK=OFF \
    -DCMAKE_INSTALL_PREFIX=$LIB_PREFIX \
    -DOPENCV_GENERATE_PKGCONFIG=ON \
    -DWITH_QT=OFF \
    -DWITH_GTK=ON \
    -DWITH_CUDA=ON \
    -DWITH_CUDNN=ON \
    -DOPENCV_DNN_CUDA=ON \
    -DWITH_CUBLAS=ON \
    -DOPENCV_EXTRA_MODULES_PATH=/git_installed_libs/opencv_contrib/modules/ \
    -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-10.2 \
    -DOpenCL_LIBRARY=/usr/local/cuda-10.2/lib64/libOpenCL.so \
    -DOpenCL_INCLUDE_DIR=/usr/local/cuda-10.2/include/ \
    -DCMAKE_BUILD_TYPE=RELEASE ..

RUN make -j4 && make install 
RUN apt-get update
WORKDIR /workspace/
