FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

RUN rm /etc/apt/sources.list.d/cuda.list
RUN rm /etc/apt/sources.list.d/nvidia-ml.list
RUN apt-key del 7fa2af80

RUN cat /etc/lsb-release
RUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub

ARG DEBIAN_FRONTEND=noninteractive

# Install some basic utilities
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    sudo \
    git \
    bzip2 \
    libx11-6 \
    checkinstall \
    locales \
    lsb-release \
    mesa-utils \
    subversion \
    nano \
    terminator \
    xterm \
    wget \
    htop \
    libssl-dev \
    build-essential \
    dbus-x11 \
    software-properties-common \
    gdb valgrind \
 && rm -rf /var/lib/apt/lists/*

RUN mkdir /workspace/
WORKDIR /workspace/

RUN git clone --depth 1 https://gitlab.kitware.com/cmake/cmake.git
WORKDIR /workspace/cmake/
RUN ./bootstrap --parallel=8 && make -j8 && make install

WORKDIR /workspace/
RUN git clone https://github.com/opencv/opencv.git -b 4.5.2
RUN git clone https://github.com/opencv/opencv_contrib.git -b 4.5.2
RUN git clone https://github.com/FFmpeg/FFmpeg.git -b release/4.4 ffmpeg/
RUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git 
RUN mkdir /workspace/projects/
RUN apt-get update

# Install boost
WORKDIR /workspace/projects/
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.bz2 && tar -xvf boost_1_78_0.tar.bz2
WORKDIR /workspace/projects/boost_1_78_0/
RUN apt-get -y update && apt-get install -y build-essential g++ python-dev autotools-dev libicu-dev libbz2-dev
RUN ./bootstrap.sh --prefix=/usr/local/
RUN ./b2 -j8 variant=release link=shared threading=multi runtime-link=shared
RUN ./b2 -j8 install

WORKDIR /workspace/projects/

# Install pkg config to find ffmpeg
RUN apt-get update -qq  && apt-get install -y autoconf \
    automake \
    build-essential \
    git-core \
    libass-dev \
    libfreetype6-dev \
    libgnutls28-dev \
    libmp3lame-dev \
    libsdl2-dev \
    libtool \
    libva-dev \
    libvdpau-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    meson \
    ninja-build \
    pkg-config \
    texinfo \
    wget \
    yasm \
    zlib1g-dev

# This part is for ffmpeg
RUN apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev libavdevice-dev ffmpeg

ARG LIB_PREFIX='/usr/local'
ENV CXXFLAGS="-D__STDC_CONSTANT_MACROS"
ENV LIB_PREFIX=${LIB_PREFIX} \
    FFMPEG_PATH='/usr/bin/ffmpeg'

RUN echo $(ffmpeg -version)

RUN apt-get update && apt-get install -y libgtk-3-dev
RUN apt-get update && apt-get install -y vim

RUN mkdir -p /workspace/opencv/build/
WORKDIR /workspace/opencv/build/

RUN opencv_cmake_flags=" \
    -D BUILD_opencv_java=OFF \
    -D BUILD_opencv_python=0 \
    -D BUILD_opencv_python2=0 \
    -D BUILD_opencv_python3=0 \
    -D WITH_FFMPEG=ON \
    -D BUILD_DOCS=OFF \
    -D BUILD_TESTS=OFF \
    -D BUILD_PERF_TESTS=OFF \
    -D BUILD_JAVA=OFF \
    -D BUILD_opencv_apps=OFF \
    -D BUILD_opencv_aruco=OFF \
    -D BUILD_opencv_bgsegm=OFF \
    -D BUILD_opencv_bioinspired=OFF \
    -D BUILD_opencv_ccalib=OFF \
    -D BUILD_opencv_datasets=OFF \
    -D BUILD_opencv_dnn_objdetect=OFF \
    -D BUILD_opencv_dpm=OFF \
    -D BUILD_opencv_fuzzy=OFF \
    -D BUILD_opencv_hfs=OFF \
    -D BUILD_opencv_java_bindings_generator=OFF \
    -D BUILD_opencv_js=OFF \
    -D BUILD_opencv_img_hash=OFF \
    -D BUILD_opencv_line_descriptor=OFF \
    -D BUILD_opencv_optflow=OFF \
    -D BUILD_opencv_phase_unwrapping=OFF \
    -D BUILD_opencv_python3=OFF \
    -D BUILD_opencv_python_bindings_generator=OFF \
    -D BUILD_opencv_reg=OFF \
    -D BUILD_opencv_rgbd=OFF \
    -D BUILD_opencv_saliency=OFF \
    -D BUILD_opencv_shape=OFF \
    -D BUILD_opencv_stereo=OFF \
    -D BUILD_opencv_stitching=OFF \
    -D BUILD_opencv_structured_light=OFF \
    -D BUILD_opencv_superres=OFF \
    -D BUILD_opencv_surface_matching=OFF \
    -D BUILD_opencv_ts=OFF \
    -D BUILD_opencv_xobjdetect=OFF \
    -D BUILD_opencv_xphoto=OFF \
    -D BUILD_opencv_dnn=OFF \
    -D BUILD_opencv_stitching=OFF \
    -D WITH_VTK=OFF \
    -D WITH_QT=ON \
    -D WITH_GTK=ON \
    -D WITH_CUDNN=OFF \
    -D WITH_CUBLAS=0 \
    -D WITH_OPENCL=OFF \
    -D WITH_CUDA=OFF \
    -D CMAKE_INSTALL_PREFIX=$LIB_PREFIX \
    -D CMAKE_BUILD_TYPE=RELEASE \    
" && cmake $opencv_cmake_flag ..       

RUN make -j2 && make install 
WORKDIR /workspace/projects/
